# -*- coding: utf-8 -*-

# form implementation generated from reading ui file 'hangman_playground.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QWidget, QInputDialog

from setting import Config
from backend.Game import Game
from backend.GameStatus import GameStatus


class Playground(QWidget):
    def setup_ui(self, form):
        form.setObjectName("form")
        form.resize(774, 596)
        self.background = QtWidgets.QLabel(form)
        self.background.setGeometry(QtCore.QRect(-10, -100, 801, 801))
        self.background.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.background.setText("")
        self.background.setPixmap(QtGui.QPixmap("1735969.jpg"))
        self.background.setObjectName("background")
        self.word = QtWidgets.QLabel(form)
        self.word.setGeometry(QtCore.QRect(250, 360, 291, 101))
        font = QtGui.QFont()
        font.setFamily("Gabriola")
        font.setPointSize(36)
        self.word.setFont(font)
        self.word.setStyleSheet("color: rgb(189, 0, 0);")
        self.word.setText("")
        self.word.setAlignment(QtCore.Qt.AlignCenter)
        self.word.setObjectName("word")
        self.start_words = QtWidgets.QLabel(form)
        self.start_words.setGeometry(QtCore.QRect(360, 2, 400, 271))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.start_words.setFont(font)
        self.start_words.setMouseTracking(False)
        self.start_words.setTabletTracking(False)
        self.start_words.setAcceptDrops(False)
        self.start_words.setStyleSheet("color: rgb(185, 0, 0);\n""")
        self.start_words.setText("")
        self.start_words.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.start_words.setWordWrap(True)
        self.start_words.setObjectName("start_words")
        self.points = QtWidgets.QLabel(form)
        self.points.setGeometry(QtCore.QRect(50, 60, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Gabriola")
        font.setPointSize(14)
        self.points.setFont(font)
        self.points.setText("")
        self.points.setObjectName("points")
        self.label = QtWidgets.QLabel(form)
        self.label.setGeometry(QtCore.QRect(300, 560, 300, 41))
        font = QtGui.QFont()
        font.setFamily("Gabriola")
        font.setPointSize(20)
        self.label.setFont(font)
        self.label.setText("")
        self.label.setObjectName("label")
        self.start_play = QtWidgets.QPushButton(form)
        self.start_play.setGeometry(QtCore.QRect(350, 470, 100, 61))
        self.start_play.setObjectName("enter_letter")
        self.count_letters = QtWidgets.QLabel(form)
        self.count_letters.setGeometry(QtCore.QRect(2, 2, 300, 100))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.count_letters.setFont(font)
        self.count_letters.setMouseTracking(False)
        self.count_letters.setTabletTracking(False)
        self.count_letters.setAcceptDrops(False)
        self.count_letters.setStyleSheet("color: rgb(185, 0, 0);\n""")
        self.count_letters.setText("")
        self.count_letters.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignTop)
        self.count_letters.setWordWrap(True)
        self.count_letters.setObjectName("count_letters")

        self.retranslate_ui(form)
        QtCore.QMetaObject.connectSlotsByName(form)

        self.start_play.clicked.connect(self.game_play)

    def retranslate_ui(self, form):
        _translate = QtCore.QCoreApplication.translate
        form.setWindowTitle(_translate("form", "form"))
        self.start_play.setText(_translate("form", "Старт"))

    def game_play(self):
        value_points = 0
        flag = False
        while True:
            game = Game()
            word = game.generate_words()
            letters_count = len(word)
            self.count_letters.setText(f"Слово из {letters_count} букв")
            while game.game_status == GameStatus.GAME_CONTINUE:
                text, ok = QInputDialog.getText(self, 'Буква', 'Введите букву:')
                if ok:
                    try_letter = game.try_open_letter(text)
                    self.word.setText(str(game.word_by_str(try_letter)))
                    self.label.setText(str(game.try_letters))
                    self.start_words.clear()
                    self.points.setText(str(f'Очки: {value_points}'))
                    self.count_letters.setText(f'Осталось попыток: {game.remaining_tries}')
                else:
                    flag = True
                    break
            if flag:
                break
            if game.game_status == GameStatus.LOOSE:
                self.start_words.setText(f'Вы проиграли, правильное слово было "{word}", ПОВЕСИТЬ ЕГО!!!')
                self.points.setText(str(f'Очки: {value_points}'))
                self.save_progress(value_points)
                break
            if game.game_status == GameStatus.WON:
                self.start_words.setText(f'Ты прав, это слово действительно было "{word}".'
                                         f'Посмотрим сколько ты еще продержишься')
                value_points += 100
                self.points.setText(str(f'Очки: {value_points}'))

    def save_progress(self, points):
        player_points = Config()
        player_points.change_config("settings.ini", "Name_points", "points", str(points))
        get_player_name = player_points.get_setting("settings.ini", "Name_points", "name")
        get_players_ponints = player_points.get_setting("settings.ini", "Name_points", "points")
        file_name = open('name_points.txt', 'a')
        file_name.write(get_player_name + ' ' + get_players_ponints + '\n')
        file_name.close()
